<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       					   http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/context
						   http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--确认目标对象-->
    <!--基于接口-->
    <bean class="cn.shen.spring.a_proxy.CustomerServiceImpl" id="customerService"/>
    <!--基于类的-->
    <bean class="cn.shen.spring.a_proxy.ProductService" id="productService"/>

    <!--编写并配置通知类-->
    <bean class="cn.shen.spring.c_aspectaop.MyAspect" id="myAspectAdvice"/>
    <!--配置切入点与切面-->
    <aop:config>
        <!--配置切入点-->
        <aop:pointcut id="myCut" expression="bean(*Service)"/>
        <!--<aop:aspect ref="myAspectAdvice">
            <aop:before method="before1" pointcut-ref="mycut"/>
            <aop:before method="before2" pointcut-ref="mycut"/>
        </aop:aspect>-->
        <aop:aspect ref="myAspectAdvice">
            <!--前置通知-->
            <!--<aop:before method="before" pointcut-ref="myCut"/>-->
            <!--后置通知-->
            <aop:after-returning method="afterReturning" pointcut-ref="myCut" returning="returnVal"/>
            <!--环绕通知-->
           <aop:around method="around" pointcut-ref="myCut"/>
            <!--抛出通知-->
            <aop:after-throwing method="afterThrowing" throwing="ex" pointcut-ref="myCut"/>
            <!--最终通知-->
            <aop:after method="finallyTrac" pointcut-ref="myCut"/>
        </aop:aspect>
    </aop:config>
</beans>